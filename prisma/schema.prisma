// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id                 String              @id @default(uuid())
  fullName           String
  email              String              @unique
  password           String
  isActive           Boolean
  created_at         DateTime            @default(now())
  updated_at         DateTime            @updatedAt
  deleted_at         DateTime?
  PasswordResetToken PasswordResetToken?

  @@map(name: "users")
}

model PasswordResetToken {
  id        String   @id @default(uuid()) // ID único
  token     String   @unique // Token de recuperación único
  userId    String   @unique // Relación con el usuario
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime // Fecha de expiración del token
  createdAt DateTime @default(now()) // Fecha de creación

  @@index([token]) // Índice para buscar por token
}

model Audists {
  id         String    @id @default(uuid())
  id_class   String
  class_name String
  data       String
  type       String
  user       String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  // role String
  // permissions String
  @@map(name: "audists")
}
